" For 
" commands that affect the presentation of text when opened in any
" text editor, e.g., automatic documentation or indentation.

set textwidth=80		" Wrap on 80 characters

" Multiline comments for C
autocmd BufEnter *.[c|h] set comments=sl:/*,m:\ *,elx:\ */,b://,

" Automatically insert the current comment leader after hitting <Enter>.
set formatoptions+=r

" Automatically insert the current comment leader after hitting 'o' or 'O'.
set formatoptions+=o

" join multiline // comments if possible
set formatoptions+=j

" Auto format for comments
set formatoptions+=c

" Can increment/decrement letters
set nrformats+=alpha

" https://shapeshed.com/vim-templates/
" Fills in documentation skeletons.
" if has("autocmd")
augroup templates
	autocmd BufNewFile *.s 0r ~/.vim/templates/template.s
	autocmd BufNewFile *.s %s/\CFILENAME/\=expand("%:t:r")/g
	autocmd BufNewFile *.s %s/\CDATE/\=strftime("%b %d %Y")/g

	autocmd BufNewFile *.c 0r ~/.vim/templates/template.c
	autocmd BufNewFile *.c %s/\CFILENAME/\=expand("%:t:r")/g
	autocmd BufNewFile *.c %s/\CDATE/\=strftime("%b %d %Y")/g
augroup END
" endif

" Multiline function arguments
" https://stackoverflow.com/questions/11984520/
set cino+=(0

set autoindent			" autoindent on
" set smartindent			" smart indent on
filetype plugin indent on
" set nowrap			" no wrapping!

set nojoinspaces		" don't add white space when I don't tell you to

" Expand tabs in C files to spaces
" au BufRead,BufNewFile *.{c,h,java} set expandtab
au BufRead,BufNewFile *.{c,cpp,tpp,h,java} set noexpandtab
au BufRead,BufNewFile *.{c,cpp,tpp,h,java} set shiftwidth=2
au BufRead,BufNewFile *.{c,cpp,tpp,h,java} set tabstop=2
" au BufRead,BufNewFile *.{c,h,java} %retab!
" args *.js | argdo retab

" Do not expand tabs in assembly file.  Make them 8 chars wide.
au BufRead,BufNewFile *.s set noexpandtab
au BufRead,BufNewFile *.s set shiftwidth=8
au BufRead,BufNewFile *.s set tabstop=8
autocmd BufWritePre *.py :%s/\s\+$//e 

au BufRead,BufNewFile *.py set noexpandtab
au BufRead,BufNewFile *.py set shiftwidth=2
au BufRead,BufNewFile *.py set tabstop=2
au BufRead,BufNewFile *.py set smarttab

  
" Spelling toggle via F10 and F11
" map <F10> <Esc>setlocal spell spelllang=en_us<CR>
" map <F11> <Esc>setlocal nospell<CR>

fun! TrimWhitespace()
	%s/\v( |\t)+$//g
	x
endfun

" au BufRead,BufNewFile *.py set comments=sl-3:\"\"\",m:\ ,elx:\"\"\"

" autocmd BufLeave * :call TrimWhitespace()
